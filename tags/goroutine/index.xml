<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Goroutine on REWINE NOTE</title><link>/tags/goroutine/</link><description>Recent content in Goroutine on REWINE NOTE</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sat, 03 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/goroutine/index.xml" rel="self" type="application/rss+xml"/><item><title>goroutine 的学习之旅</title><link>/post/learn_goroutine/</link><pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate><guid>/post/learn_goroutine/</guid><description>&lt;p>回想起来，我是因为对 goroutine 有兴趣而去了解 Go 的，因为 finger tree 而想学 Haskell，结果坑留了半年了（另一个坑留了快3年，Monad 还没弄明白），今天有时间先填上一个再说。&lt;/p>
&lt;p>goroutine，Go 语言的协程，是一种比线程更轻量的存在，一个cpu可以支持上万的协程。Go 可以通过 goroutine 支持并发。&lt;/p>
&lt;p>Go使用的是并发模型中的 CSP 模型，Communicating Sequential Processes，译为通信顺序进程、七周七并发第六章内容，这本书继续留坑有空再看。&lt;/p></description></item></channel></rss>